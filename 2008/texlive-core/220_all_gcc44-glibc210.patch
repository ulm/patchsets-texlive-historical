Fix const checks that cause build failures with glibc 2.10 + gcc 4.4
By  Jussi Kosunen, jsk105@zepler.net
https://bugs.gentoo.org/show_bug.cgi?id=271052
Upstream status unknown.

Index: texlive-20080816-source/libs/xpdf/goo/gfile.cc
===================================================================
--- texlive-20080816-source.orig/libs/xpdf/goo/gfile.cc
+++ texlive-20080816-source/libs/xpdf/goo/gfile.cc
@@ -309,7 +309,7 @@ GString *appendToPath(GString *path, con
 GString *grabPath(const char *fileName) {
 #ifdef VMS
   //---------- VMS ----------
-  char *p;
+  const char *p;
 
   if ((p = strrchr(fileName, ']')))
     return new GString(fileName, p + 1 - fileName);
@@ -319,7 +319,7 @@ GString *grabPath(const char *fileName) 
 
 #elif defined(__EMX__) || defined(WIN32)
   //---------- OS/2+EMX and Win32 ----------
-  char *p;
+  const char *p;
 
   if ((p = strrchr(fileName, '/')))
     return new GString(fileName, p - fileName);
@@ -331,7 +331,7 @@ GString *grabPath(const char *fileName) 
 
 #elif defined(ACORN)
   //---------- RISCOS ----------
-  char *p;
+  const char *p;
 
   if ((p = strrchr(fileName, '.')))
     return new GString(fileName, p - fileName);
@@ -339,7 +339,7 @@ GString *grabPath(const char *fileName) 
 
 #elif defined(MACOS)
   //---------- MacOS ----------
-  char *p;
+  const char *p;
 
   if ((p = strrchr(fileName, ':')))
     return new GString(fileName, p - fileName);
@@ -347,7 +347,7 @@ GString *grabPath(const char *fileName) 
 
 #else
   //---------- Unix ----------
-  char *p;
+  const char *p;
 
   if ((p = strrchr(fileName, '/')))
     return new GString(fileName, p - fileName);
